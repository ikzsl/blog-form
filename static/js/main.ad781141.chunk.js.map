{"version":3,"sources":["logo.png","reducers/reducers.js","routes.js","actions/actions.js","components/header/Header.js","components/signupForm/SignupForm.js","components/loginForm/LoginForm.js","components/mainPage/mainPage.js","components/pageNotFound/pageNotFound.js","components/app/App.js","index.js"],"names":["module","exports","initialState","currentUser","error","host","join","fetchLoginFailure","errorMessage","type","payload","loginUser","userObj","userPostFetch","user","dispatch","a","url","routes","axios","post","response","data","localStorage","setItem","token","errors","errorName","Object","keys","userLoginFetch","Header","src","logo","width","alt","Signup","useDispatch","useSelector","state","validationSchema","Yup","shape","username","max","required","password","matches","email","onSubmit","values","className","initialValues","htmlFor","Item","name","id","placeholder","size","suffix","UserOutlined","MailOutlined","Password","autoComplete","loading","disabled","icon","UserAddOutlined","to","LoginForm","LoginOutlined","Main","LogoutOutlined","onClick","evt","preventDefault","removeItem","App","useEffect","get","headers","Authorization","exact","path","component","MainPage","SignupForm","PageNotFound","store","createStore","action","compose","applyMiddleware","thunk","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad781141.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.968531f8.png\";","const initialState = {\n  currentUser: {},\n  error: null,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case 'LOGIN_USER':\n      return { ...state, currentUser: action.payload };\n    case 'LOGOUT_USER':\n      return { ...state, currentUser: {} };\n    case 'CHANGE_FETCH_STATUS':\n      return { ...state, error: action.payload };\n    default:\n      return state;\n  }\n}\n","const host = 'https://conduit.productionready.io/api/';\n\nexport default {\n  userPostUrl: () => [host, 'users'].join('/'),\n  userLoginUrl: () => [host, 'users', 'login'].join('/'),\n  getProfileUrl: () => [host, 'user'].join('/'),\n};\n","import axios from 'axios';\nimport routes from '../routes';\n\nconst fetchLoginFailure = (errorMessage) => ({\n  type: 'CHANGE_FETCH_STATUS',\n  payload: errorMessage,\n});\n\nconst fetchLoginSuccess = () => ({\n  type: 'CHANGE_FETCH_STATUS',\n  payload: null,\n});\n\nconst loginUser = (userObj) => ({\n  type: 'LOGIN_USER',\n  payload: userObj,\n});\n\nexport const logoutUser = () => ({\n  type: 'LOGOUT_USER',\n});\n\n// ------------------ userPostFetch ----------------------\n\nexport const userPostFetch = (user) => async (dispatch) => {\n  try {\n    const url = routes.userPostUrl();\n    const response = await axios.post(url, { user });\n    const { data } = response;\n    localStorage.setItem('token', data.user.token);\n    dispatch(fetchLoginSuccess());\n    dispatch(loginUser(data.user));\n  } catch (err) {\n    const { errors } = err.response.data;\n    const errorName = Object.keys(errors);\n    const errorMessage = `${errorName[0]} ${errors[errorName[0]].join(' ')}`;\n    dispatch(fetchLoginFailure(errorMessage));\n  }\n};\n\n// ------------------ userLoginFetch ----------------------\n\nexport const userLoginFetch = (user) => async (dispatch) => {\n  try {\n    const url = routes.userLoginUrl();\n    const response = await axios.post(url, { user });\n    const { data } = response;\n    localStorage.setItem('token', data.user.token);\n    dispatch(fetchLoginSuccess());\n    dispatch(loginUser(data.user));\n  } catch (err) {\n    const { errors } = err.response.data;\n    const errorName = Object.keys(errors);\n    const errorMessage = `${errorName[0]} ${errors[errorName[0]].join(' ')}`;\n    dispatch(fetchLoginFailure(errorMessage));\n  }\n};\n\n// --------------------getProfileFetch--------------------\n\nexport const getProfileFetch = () => async (dispatch) => {\n  const { token } = localStorage;\n  if (!token) {\n    return;\n  }\n  try {\n    const url = routes.getProfileUrl();\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: `Token ${token}`,\n      },\n    });\n    const { data } = response;\n    dispatch(loginUser(data.user));\n  } catch (err) {\n    localStorage.removeItem('token');\n  }\n};\n","import React from 'react';\n// import { NavLink } from 'react-router-dom';\n\nimport './header.scss';\nimport logo from '../../logo.png';\n\nconst Header = () => (\n  <header>\n    <img src={logo} width=\"100\" alt=\"logo\" />\n    {/* <nav>\n      <ul className=\"nav\">\n        <li>\n          <NavLink exact to=\"/\" className=\"link\">\n            /\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/login\" className=\"link\">\n            /login\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/signup\" className=\"link\">\n            /signup\n          </NavLink>\n        </li>\n      </ul>\n    </nav> */}\n  </header>\n);\nexport default Header;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, SubmitButton } from 'formik-antd';\nimport { MailOutlined, UserOutlined, UserAddOutlined } from '@ant-design/icons';\n\nimport { userPostFetch } from '../../actions/actions';\nimport './signupForm.scss';\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const error = useSelector((state) => state.error);\n\n  const initialValues = {\n    username: '',\n    password: '',\n    email: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string()\n      .max(50, 'Слишком длинно - не более 50 символов')\n      .required('Имя обязательно'),\n    password: Yup.string()\n      .matches(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{6,40}$/,\n        'от 6 до 40 символов, как минимум одна цифра и одна заглавная буква',\n      )\n      .required('Пароль нужен'),\n\n    email: Yup.string().email('Неправильная почта').required('Почту, пожалуйста'),\n  });\n\n  const onSubmit = async (values) => {\n    dispatch(userPostFetch(values));\n  };\n\n  return (\n    <div className=\"formContainer\">\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n        <Form className=\"form\">\n          <h1>Регистрации</h1>\n          <div className=\"formItem\">\n            <label htmlFor=\"username\">\n              Имя\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"username\">\n              <Input\n                id=\"username\"\n                name=\"username\"\n                placeholder=\"Иван\"\n                size=\"large\"\n                suffix={<UserOutlined />}\n              />\n            </Form.Item>\n          </div>\n          <div className=\"formItem\">\n            <label htmlFor=\"email\">\n              Электропочта\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"email\">\n              <Input\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"ivan@mail.ru\"\n                size=\"large\"\n                suffix={<MailOutlined />}\n              />\n            </Form.Item>\n          </div>\n          <div className=\"formItem\">\n            <label htmlFor=\"pwd\">\n              Пароль\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"password\">\n              <Input.Password\n                id=\"pwd\"\n                name=\"password\"\n                placeholder=\"bu7UYvjl2nkj9WNshd\"\n                size=\"large\"\n                autoComplete=\"off\"\n              />\n            </Form.Item>\n          </div>\n\n          <div className=\"formButtonsContainer\">\n            <SubmitButton\n              loading={false}\n              disabled={false}\n              size=\"large\"\n              shape=\"round\"\n              icon={<UserAddOutlined />}\n              className=\"button\"\n            >\n              Зарегистрироваться\n            </SubmitButton>\n          </div>\n          <span className=\"error\">{error}</span>\n        </Form>\n      </Formik>\n      <div className=\"link-container\">\n        <span>Уже зарегистрировались? </span>\n        <Link to=\"/login\">Войти</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, SubmitButton } from 'formik-antd';\nimport { MailOutlined, LoginOutlined } from '@ant-design/icons';\nimport { userLoginFetch } from '../../actions/actions';\nimport './loginForm.scss';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector((state) => state.error);\n\n  const initialValues = {\n    password: '',\n    email: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    password: Yup.string().required('Пароль нужен'),\n\n    email: Yup.string().email('Неправильная почта').required('Почту, пожалуйста'),\n  });\n\n  const onSubmit = async (values) => {\n    dispatch(userLoginFetch(values));\n  };\n\n  return (\n    <div className=\"formContainer\">\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n        <Form>\n          <h1>Вход</h1>\n\n          <div className=\"formItem\">\n            <label htmlFor=\"email\">\n              Электропочта\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"email\">\n              <Input\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"ivan@mail.ru\"\n                size=\"large\"\n                suffix={<MailOutlined />}\n              />\n            </Form.Item>\n          </div>\n\n          <div className=\"formItem\">\n            <label htmlFor=\"pwd\">\n              Пароль\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"password\">\n              <Input.Password id=\"pwd\" name=\"password\" size=\"large\" autoComplete=\"off\" />\n            </Form.Item>\n          </div>\n\n          <div className=\"formButtonsContainer\">\n            <SubmitButton\n              loading={false}\n              disabled={false}\n              size=\"large\"\n              shape=\"round\"\n              icon={<LoginOutlined />}\n              className=\"button\"\n            >\n              Войти\n            </SubmitButton>\n          </div>\n        </Form>\n      </Formik>\n      <div className=\"link-container\">\n        <Link to=\"/signup\">Зарегистрироваться</Link>\n        <div className=\"error\">{error}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Button } from 'antd';\nimport { LogoutOutlined } from '@ant-design/icons';\nimport { logoutUser } from '../../actions/actions';\n\nimport './mainPage.scss';\n\nconst Main = () => {\n  const dispatch = useDispatch();\n  const currentUser = useSelector((state) => state.currentUser);\n\n  const handleExit = (evt) => {\n    evt.preventDefault();\n    localStorage.removeItem('token');\n    dispatch(logoutUser());\n  };\n\n  const { username } = currentUser;\n  return (\n    <div className=\"form-container\">\n      <h1>{`Здравствуй ${username}`}</h1>\n      <Button\n        disabled={false}\n        size=\"large\"\n        className=\"button\"\n        icon={<LogoutOutlined />}\n        shape=\"round\"\n        onClick={handleExit}\n        type=\"danger\"\n      >\n        Выйти\n      </Button>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nexport default () => (\n  <>\n    <h1>404</h1>\n    <h2>Страница не найдена</h2>\n  </>\n);\n","import React, { useEffect } from 'react';\nimport {\n  HashRouter, Switch, Route, Redirect,\n} from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProfileFetch } from '../../actions/actions';\n\nimport Header from '../header/Header';\nimport SignupForm from '../signupForm/SignupForm';\nimport LoginForm from '../loginForm/LoginForm';\nimport MainPage from '../mainPage/mainPage';\nimport PageNotFound from '../pageNotFound/pageNotFound';\n\nimport './app.scss';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const currentUser = useSelector((state) => state.currentUser);\n\n  useEffect(() => {\n    dispatch(getProfileFetch());\n  }, []);\n\n  const { id } = currentUser;\n\n  return (\n    <HashRouter>\n      {id ? <Redirect to=\"/\" /> : <Redirect to=\"/login\" />}\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={MainPage} />\n        <Route path=\"/login\" component={LoginForm} />\n        <Route path=\"/signup\" component={SignupForm} />\n        <Route path=\"*\" component={PageNotFound} />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducers from './reducers/reducers';\n\nimport 'antd/dist/antd.css';\nimport './index.scss';\nimport App from './components/app/App';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk), composeWithDevTools()));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}