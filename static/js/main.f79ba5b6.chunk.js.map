{"version":3,"sources":["logo.png","reducers/reducers.js","routes.js","actions/actions.js","components/header/Header.js","components/signupForm/SignupForm.js","components/loginForm/LoginForm.js","components/mainPage/mainPage.js","components/pageNotFound/pageNotFound.js","components/app/App.js","index.js"],"names":["module","exports","initialState","currentUser","errors","host","join","fetchLoginFailure","errorMessage","type","payload","loginUser","userObj","userLoginFetch","user","setFieldError","dispatch","a","url","routes","axios","post","response","data","localStorage","setItem","token","Header","src","logo","width","alt","validationSchema","Yup","shape","username","max","required","password","matches","email","initialValues","Signup","useDispatch","className","onSubmit","values","userPostFetch","htmlFor","Item","name","id","placeholder","size","suffix","UserOutlined","MailOutlined","Password","autoComplete","loading","disabled","icon","UserAddOutlined","to","LoginForm","LoginOutlined","Main","useSelector","state","LogoutOutlined","onClick","evt","preventDefault","removeItem","App","useEffect","get","headers","Authorization","exact","path","component","MainPage","SignupForm","PageNotFound","store","createStore","action","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f79ba5b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.968531f8.png\";","const initialState = {\n  currentUser: {},\n  errors: {},\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case 'LOGIN_USER':\n      return { ...state, currentUser: action.payload };\n    case 'LOGOUT_USER':\n      return { ...state, currentUser: {} };\n    case 'CHANGE_FETCH_STATUS':\n      return { ...state, errors: action.payload };\n    default:\n      return state;\n  }\n}\n","const host = 'https://conduit.productionready.io/api/';\n\nexport default {\n  userPostUrl: () => [host, 'users'].join('/'),\n  userLoginUrl: () => [host, 'users', 'login'].join('/'),\n  getProfileUrl: () => [host, 'user'].join('/'),\n};\n","import axios from 'axios';\nimport routes from '../routes';\n\nconst fetchLoginFailure = (errorMessage) => ({\n  type: 'CHANGE_FETCH_STATUS',\n  payload: errorMessage,\n});\n\nconst fetchLoginSuccess = () => ({\n  type: 'CHANGE_FETCH_STATUS',\n  payload: null,\n});\n\nconst loginUser = (userObj) => ({\n  type: 'LOGIN_USER',\n  payload: userObj,\n});\n\nexport const logoutUser = () => ({\n  type: 'LOGOUT_USER',\n});\n\n// ------------------ userPostFetch ----------------------\n\nexport const userPostFetch = (user, setFieldError) => async (dispatch) => {\n  try {\n    const url = routes.userPostUrl();\n    const response = await axios.post(url, { user });\n    const { data } = response;\n    localStorage.setItem('token', data.user.token);\n    dispatch(fetchLoginSuccess());\n    dispatch(loginUser(data.user));\n  } catch (err) {\n    const { errors } = err.response.data;\n    dispatch(fetchLoginFailure(errors));\n    setFieldError('email', errors.email);\n    setFieldError('username', errors.username);\n    setFieldError('password', errors.password);\n  }\n};\n\n// ------------------ userLoginFetch ----------------------\n\nexport const userLoginFetch = (user, setFieldError) => async (dispatch) => {\n  try {\n    const url = routes.userLoginUrl();\n    const response = await axios.post(url, { user });\n    const { data } = response;\n    localStorage.setItem('token', data.user.token);\n    dispatch(fetchLoginSuccess());\n    dispatch(loginUser(data.user));\n  } catch (err) {\n    const { errors } = err.response.data;\n    dispatch(fetchLoginFailure(errors));\n    setFieldError('email', `email or password ${errors['email or password']}`);\n    setFieldError('password', `email or password ${errors['email or password']}`);\n  }\n};\n\n// --------------------getProfileFetch--------------------\n\nexport const getProfileFetch = () => async (dispatch) => {\n  const { token } = localStorage;\n  if (!token) {\n    return;\n  }\n  try {\n    const url = routes.getProfileUrl();\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: `Token ${token}`,\n      },\n    });\n    const { data } = response;\n    dispatch(loginUser(data.user));\n  } catch (err) {\n    localStorage.removeItem('token');\n  }\n};\n","import React from 'react';\n// import { NavLink } from 'react-router-dom';\n\nimport './header.scss';\nimport logo from '../../logo.png';\n\nconst Header = () => (\n  <header>\n    <img src={logo} width=\"100\" alt=\"logo\" />\n    {/* <nav>\n      <ul className=\"nav\">\n        <li>\n          <NavLink exact to=\"/\" className=\"link\">\n            /\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/login\" className=\"link\">\n            /login\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/signup\" className=\"link\">\n            /signup\n          </NavLink>\n        </li>\n      </ul>\n    </nav> */}\n  </header>\n);\nexport default Header;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, SubmitButton } from 'formik-antd';\nimport { MailOutlined, UserOutlined, UserAddOutlined } from '@ant-design/icons';\n\nimport { userPostFetch } from '../../actions/actions';\nimport './signupForm.scss';\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .max(50, 'Слишком длинно - не более 50 символов')\n    .required('Имя обязательно'),\n  password: Yup.string()\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d\\w\\W]{6,40}$/,\n      'от 6 до 40 символов, как минимум одна цифра и одна заглавная буква',\n    )\n    .required('Пароль нужен'),\n\n  email: Yup.string().email('Неправильная почта').required('Почту, пожалуйста'),\n});\n\nconst initialValues = {\n  username: '',\n  password: '',\n  email: '',\n};\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = (values, { setFieldError }) => {\n    dispatch(userPostFetch(values, setFieldError));\n  };\n  return (\n    <div className=\"formContainer\">\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n        <Form className=\"form\">\n          <h1>Регистрации</h1>\n          <div className=\"formItem\">\n            <label htmlFor=\"username\">\n              Имя\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"username\">\n              <Input\n                id=\"username\"\n                name=\"username\"\n                placeholder=\"Иван\"\n                size=\"large\"\n                suffix={<UserOutlined />}\n              />\n            </Form.Item>\n          </div>\n          <div className=\"formItem\">\n            <label htmlFor=\"email\">\n              Электропочта\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"email\">\n              <Input\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"ivan@mail.ru\"\n                size=\"large\"\n                suffix={<MailOutlined />}\n              />\n            </Form.Item>\n          </div>\n          <div className=\"formItem\">\n            <label htmlFor=\"pwd\">\n              Пароль\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"password\">\n              <Input.Password\n                id=\"pwd\"\n                name=\"password\"\n                placeholder=\"bu7UYvjl2nkj9WNshd\"\n                size=\"large\"\n                autoComplete=\"off\"\n              />\n            </Form.Item>\n          </div>\n\n          <div className=\"formButtonsContainer\">\n            <SubmitButton\n              loading={false}\n              disabled={false}\n              size=\"large\"\n              shape=\"round\"\n              icon={<UserAddOutlined />}\n              className=\"button\"\n            >\n              Зарегистрироваться\n            </SubmitButton>\n          </div>\n        </Form>\n      </Formik>\n      <div className=\"link-container\">\n        <span>Уже зарегистрировались? </span>\n        <Link to=\"/login\">Войти</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, SubmitButton } from 'formik-antd';\nimport { MailOutlined, LoginOutlined } from '@ant-design/icons';\nimport { userLoginFetch } from '../../actions/actions';\nimport './loginForm.scss';\n\nconst initialValues = {\n  password: '',\n  email: '',\n};\n\nconst validationSchema = Yup.object().shape({\n  password: Yup.string().required('Пароль нужен'),\n  email: Yup.string().email('Неправильная почта').required('Почту, пожалуйста'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = async (values, { setFieldError }) => {\n    dispatch(userLoginFetch(values, setFieldError));\n  };\n\n  return (\n    <div className=\"formContainer\">\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n        <Form>\n          <h1>Вход</h1>\n\n          <div className=\"formItem\">\n            <label htmlFor=\"email\">\n              Электропочта\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"email\">\n              <Input\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"ivan@mail.ru\"\n                size=\"large\"\n                suffix={<MailOutlined />}\n              />\n            </Form.Item>\n          </div>\n\n          <div className=\"formItem\">\n            <label htmlFor=\"pwd\">\n              Пароль\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"password\">\n              <Input.Password id=\"pwd\" name=\"password\" size=\"large\" autoComplete=\"off\" />\n            </Form.Item>\n          </div>\n\n          <div className=\"formButtonsContainer\">\n            <SubmitButton\n              loading={false}\n              disabled={false}\n              size=\"large\"\n              shape=\"round\"\n              icon={<LoginOutlined />}\n              className=\"button\"\n            >\n              Войти\n            </SubmitButton>\n          </div>\n        </Form>\n      </Formik>\n      <div className=\"link-container\">\n        <Link to=\"/signup\">Зарегистрироваться</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Button } from 'antd';\nimport { LogoutOutlined } from '@ant-design/icons';\nimport { logoutUser } from '../../actions/actions';\n\nimport './mainPage.scss';\n\nconst Main = () => {\n  const dispatch = useDispatch();\n  const currentUser = useSelector((state) => state.currentUser);\n\n  const handleExit = (evt) => {\n    evt.preventDefault();\n    localStorage.removeItem('token');\n    dispatch(logoutUser());\n  };\n\n  const { username } = currentUser;\n  return (\n    <div className=\"form-container\">\n      <h1>{`Здравствуй ${username}`}</h1>\n      <Button\n        disabled={false}\n        size=\"large\"\n        className=\"button\"\n        icon={<LogoutOutlined />}\n        shape=\"round\"\n        onClick={handleExit}\n        type=\"danger\"\n      >\n        Выйти\n      </Button>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nexport default () => (\n  <>\n    <h1>404</h1>\n    <h2>Страница не найдена</h2>\n  </>\n);\n","import React, { useEffect } from 'react';\nimport {\n  HashRouter, Switch, Route, Redirect,\n} from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProfileFetch } from '../../actions/actions';\n\nimport Header from '../header/Header';\nimport SignupForm from '../signupForm/SignupForm';\nimport LoginForm from '../loginForm/LoginForm';\nimport MainPage from '../mainPage/mainPage';\nimport PageNotFound from '../pageNotFound/pageNotFound';\n\nimport './app.scss';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const currentUser = useSelector((state) => state.currentUser);\n\n  useEffect(() => {\n    dispatch(getProfileFetch());\n  }, [currentUser.id]);\n\n  const { id } = currentUser;\n\n  return (\n    <HashRouter>\n      {id ? <Redirect to=\"/\" /> : <Redirect to=\"/login\" />}\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={MainPage} />\n        <Route path=\"/login\" component={LoginForm} />\n        <Route path=\"/signup\" component={SignupForm} />\n        <Route path=\"*\" component={PageNotFound} />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\n\nimport reducers from './reducers/reducers';\n\nimport 'antd/dist/antd.css';\nimport './index.scss';\nimport App from './components/app/App';\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}