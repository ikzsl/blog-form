{"version":3,"sources":["logo.png","components/header/header.js","data/data.js","components/form/form3.js","components/form/form2.js","components/form/form.js","components/app/app.js","index.js"],"names":["module","exports","Header","src","logo","width","alt","className","exact","to","axios","defaults","baseURL","getData","body","post","initialValues","name","password","passwordConfirmation","email","website","age","skills","acceptTerms","validationSchema","Yup","shape","max","required","matches","oneOf","url","typeError","min","nullable","SubmitForm","useState","loading","setLoading","userCreatingErrorMessage","setUserCreatingErrorMessage","successMessage","setSuccessMessage","netErrorMessage","setNetErrorMessage","onSubmit","values","a","resetForm","filteredSkills","filter","Boolean","res","data","errorMessage","isAxiosError","response","onChange","htmlFor","Item","id","placeholder","size","suffix","UserOutlined","Password","MailOutlined","LinkOutlined","rowKey","row","pagination","columns","title","key","render","text","record","i","ThunderboltOutlined","onPressEnter","evt","preventDefault","document","getElementById","click","autoFocus","createNewRow","type","shouldUpdate","disabled","MyForm","firstName","lastName","setSubmitting","setTimeout","this","htmlType","React","Component","state","setState","handleClearCloneError","handleClearSuccess","handleClickButton","App","path","component","Form","Form2","Form3","ReactDOM"],"mappings":"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","file":"static/js/main.daa59ba8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.968531f8.png\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './header.scss';\nimport logo from '../../logo.png';\n\nconst Header = () => (\n  <header>\n    <img src={logo} width=\"100\" alt=\"logo\" />\n    <nav>\n      <ul className=\"nav\">\n        <li>\n          <NavLink exact to=\"/\" className=\"link\">\n            /\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/login\" className=\"link\">\n            /login\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/signup\" className=\"link\">\n            /signup\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\nexport default Header;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:3012';\n// axios.defaults.timeout = 2000;\n\nconst getData = (body) => axios.post('/sign-up', body);\n\nexport default getData;\n","// on hooks\nimport React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Form,\n  Input,\n  InputNumber,\n  Table,\n  AddRowButton,\n  Checkbox,\n  SubmitButton,\n  ResetButton,\n} from 'formik-antd';\nimport {\n  MailOutlined, UserOutlined, LinkOutlined, ThunderboltOutlined,\n} from '@ant-design/icons';\n\nimport getData from '../../data/data';\nimport './form.scss';\n\nconst initialValues = {\n  name: '',\n  password: '',\n  passwordConfirmation: '',\n  email: '',\n  website: '',\n  age: null,\n  skills: [''],\n  acceptTerms: false,\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().max(50, 'Слишком длинно - не более 50 символов').required('Имя обязательно'),\n  password: Yup.string()\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{8,40}$/,\n      'от 8 до 40 символов, как минимум одна цифра и одна заглавная буква',\n    )\n    .required('Пароль нужен'),\n  passwordConfirmation: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Надо точь-в-точь как пароль')\n    .required('Обязательно'),\n  email: Yup.string().email('Неправильная почта').required('Почту, пожалуйста'),\n  website: Yup.string().url('Неверный адрес сайта'),\n  age: Yup.number()\n    .typeError('Должно быть число')\n    .min(18, 'Юнцам тут не место')\n    .max(65, 'Займись лучше внуками, дедуля')\n    .required('Сколько тебе лет?'),\n  skills: Yup.array(),\n  acceptTerms: Yup.bool().oneOf([true], 'Нужно согласие').required('Обязательно').nullable('null'),\n});\n\nconst SubmitForm = () => {\n  const [loading, setLoading] = useState(false);\n  const [userCreatingErrorMessage, setUserCreatingErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(false);\n  const [netErrorMessage, setNetErrorMessage] = useState(false);\n\n  const onSubmit = async (values, { resetForm }) => {\n    const filteredSkills = values.skills.filter(Boolean);\n    setLoading(true);\n    const body = {\n      ...values,\n      skills: filteredSkills,\n    };\n    try {\n      const res = await getData(body);\n      const { data } = res;\n      setUserCreatingErrorMessage(null);\n      setSuccessMessage(data);\n      setNetErrorMessage(null);\n      setLoading(false);\n      resetForm({\n        errorMessage: null,\n      });\n    } catch (err) {\n      if (err.isAxiosError) {\n        setNetErrorMessage('Сервер не отвечает');\n        setLoading(false);\n      }\n      setUserCreatingErrorMessage(err.response.data);\n      setSuccessMessage(null);\n      setNetErrorMessage(null);\n      setLoading(false);\n    }\n  };\n  return (\n    <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n      <Form\n        className=\"form\"\n        onChange={() => {\n          setSuccessMessage(null);\n        }}\n      >\n        <h1>Форма регистрации</h1>\n        <div>\n          <label htmlFor=\"name\">\n            Имя\n            <span className=\"required-star\"> *</span>\n          </label>\n          <Form.Item name=\"name\">\n            <Input\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Иван\"\n              size=\"large\"\n              suffix={<UserOutlined />}\n            />\n          </Form.Item>\n        </div>\n        <div>\n          <label htmlFor=\"pwd\">\n            Пароль\n            <span className=\"required-star\"> *</span>\n          </label>\n          <Form.Item name=\"password\">\n            <Input.Password\n              id=\"pwd\"\n              name=\"password\"\n              placeholder=\"bu7UYvjl2nkj9WNshd\"\n              size=\"large\"\n            />\n          </Form.Item>\n        </div>\n        <div>\n          <label htmlFor=\"repwd\">\n            Повторите пароль\n            <span className=\"required-star\"> *</span>\n          </label>\n          <Form.Item name=\"passwordConfirmation\">\n            <Input.Password\n              id=\"repwd\"\n              name=\"passwordConfirmation\"\n              placeholder=\"bu7UYvjl2nkj9WNshd\"\n              size=\"large\"\n            />\n          </Form.Item>\n        </div>\n        <div>\n          <label htmlFor=\"email\">\n            Электропочта\n            <span className=\"required-star\"> *</span>\n          </label>\n          <span className=\"error\">{userCreatingErrorMessage}</span>\n          <Form.Item name=\"email\">\n            <Input\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"ivan@mail.ru\"\n              size=\"large\"\n              onChange={() => {\n                setUserCreatingErrorMessage(null);\n              }}\n              suffix={<MailOutlined />}\n            />\n          </Form.Item>\n        </div>\n        <div>\n          <label htmlFor=\"site\">Ваш сайт </label>\n          <Form.Item name=\"website\">\n            <Input\n              id=\"site\"\n              name=\"website\"\n              placeholder=\"http://www.ivan.ru\"\n              size=\"large\"\n              suffix={<LinkOutlined />}\n            />\n          </Form.Item>\n        </div>\n        <div>\n          <label htmlFor=\"age\">\n            Возраст\n            <span className=\"required-star\"> *</span>\n          </label>\n          <Form.Item name=\"age\">\n            <InputNumber id=\"age\" name=\"age\" placeholder=\"27\" size=\"large\" />\n          </Form.Item>\n        </div>\n\n        <div>\n          <Table\n            name=\"skills\"\n            rowKey={(row) => `${row.id}`}\n            size=\"small\"\n            pagination={false}\n            columns={[\n              {\n                title: 'Cуперспособности',\n                key: 'name',\n                render: (text, record, i) => (\n                  <Input\n                    name={`skills[${i}]`}\n                    placeholder=\"Телепатия\"\n                    size=\"large\"\n                    suffix={<ThunderboltOutlined />}\n                    onPressEnter={(evt) => {\n                      evt.preventDefault();\n                      document.getElementById('addSkillButton').click();\n                    }}\n                    autoFocus\n                  />\n                ),\n              },\n            ]}\n          />\n\n          <AddRowButton\n            name=\"skills\"\n            createNewRow={(text) => text || ''}\n            size=\"large\"\n            type=\"primary\"\n            className=\"skillsButton\"\n            id=\"addSkillButton\"\n          >\n            Добавить суперспособность\n          </AddRowButton>\n        </div>\n\n        <div>\n          <Form.Item name=\"acceptTerms\" shouldUpdate={false}>\n            <Checkbox id=\"terms\" name=\"acceptTerms\" />\n            <label htmlFor=\"terms\">\n              {' '}\n              Согласен с условиями\n              <span className=\"required-star\"> *</span>\n            </label>\n          </Form.Item>\n        </div>\n\n        <div className=\"formButtonsContainer\">\n          <SubmitButton loading={loading} disabled={false} size=\"large\" className=\"button\">\n            Зарегистрироваться\n          </SubmitButton>\n          <ResetButton size=\"large\" className=\"button\">\n            Очистить форму\n          </ResetButton>\n        </div>\n        <span className=\"success\">{successMessage}</span>\n        <span className=\"error\">{netErrorMessage}</span>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default SubmitForm;\n","import React from 'react';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport { Input, Checkbox, Button } from 'antd';\n\nclass MyForm extends React.Component {\n  initialValues = { firstName: '', lastName: '', email: '' };\n\n  validationSchema = Yup.object({\n    firstName: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n    lastName: Yup.string().max(20, 'Must be 20 characters or less').required('Required'),\n    email: Yup.string().email('Invalid email address').required('Required'),\n  });\n\n  onSubmit = (values, { setSubmitting }) => {\n    setTimeout(() => {\n      // alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 400);\n  };\n\n  render() {\n    return (\n      <Formik\n        initialValues={this.initialValues}\n        validationSchema={this.validationSchema}\n        onSubmit={this.onSubmit}\n      >\n        <Form>\n          <h2>Форма авторизации</h2>\n          <label htmlFor=\"firstName\">First Name</label>\n          <Input name=\"firstName\" type=\"text\" />\n          <ErrorMessage name=\"firstName\" />\n          <label htmlFor=\"lastName\">Last Name</label>\n          <Input name=\"lastName\" type=\"text\" />\n          <ErrorMessage name=\"lastName\" />\n          <label htmlFor=\"email\">Email Address</label>\n          <Input name=\"email\" type=\"email\" />\n          <ErrorMessage name=\"email\" />\n\n          <label htmlFor=\"check\">check</label>\n          <Checkbox name=\"check\" />\n          <ErrorMessage name=\"check\" />\n\n          <Button htmlType=\"submit\">Submit</Button>\n        </Form>\n      </Formik>\n    );\n  }\n}\n\nexport default MyForm;\n","// on class\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Form,\n  Input,\n  InputNumber,\n  Table,\n  AddRowButton,\n  Checkbox,\n  SubmitButton,\n  ResetButton,\n} from 'formik-antd';\nimport {\n  MailOutlined, UserOutlined, LinkOutlined, ThunderboltOutlined,\n} from '@ant-design/icons';\n\nimport getData from '../../data/data';\nimport './form.scss';\n\nclass SubmitForm extends React.Component {\n  state = {\n    loading: false,\n    userCreatingErrorMessage: null,\n    successMessage: null,\n    netErrorMessage: null,\n  };\n\n  initialValues = {\n    name: '',\n    password: '',\n    passwordConfirmation: '',\n    email: '',\n    website: '',\n    age: null,\n    skills: [''],\n    acceptTerms: false,\n  };\n\n  validationSchema = Yup.object().shape({\n    name: Yup.string().max(50, 'Слишком длинно - не более 50 символов').required('Имя обязательно'),\n    password: Yup.string()\n      .matches(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{8,40}$/,\n        'от 8 до 40 символов, как минимум одна цифра и одна заглавная буква',\n      )\n      .required('Пароль нужен'),\n    passwordConfirmation: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Надо точь-в-точь как пароль')\n      .required('Обязательно'),\n    email: Yup.string().email('Неправильная почта').required('Почту, пожалуйста'),\n    website: Yup.string().url('Неверный адрес сайта'),\n    age: Yup.number()\n      .typeError('Должно быть число')\n      .min(18, 'Юнцам тут не место')\n      .max(65, 'Займись лучше внуками, дедуля')\n      .required('Сколько тебе лет?'),\n    skills: Yup.array(),\n    acceptTerms: Yup.bool()\n      .oneOf([true], 'Нужно согласие')\n      .required('Обязательно')\n      .nullable('null'),\n  });\n\n  onSubmit = async (values, { resetForm }) => {\n    const filteredSkills = values.skills.filter(Boolean);\n\n    this.setState({\n      loading: true,\n    });\n\n    const body = {\n      ...values,\n      skills: filteredSkills,\n    };\n\n    try {\n      const res = await getData(body);\n      const { data } = res;\n\n      this.setState({\n        userCreatingErrorMessage: null,\n        netErrorMessage: null,\n        successMessage: data,\n        loading: false,\n      });\n\n      resetForm({\n        errorMessage: null,\n      });\n    } catch (err) {\n      // console.log('error', Object.entries(err), err.isAxiosError);\n      if (err.isAxiosError) {\n        this.setState({\n          netErrorMessage: 'Сервер не отвечает',\n          loading: false,\n        });\n      }\n      this.setState({\n        userCreatingErrorMessage: err.response.data,\n        successMessage: null,\n        netErrorMessage: null,\n        loading: false,\n      });\n    }\n  };\n\n  handleClearCloneError = () => {\n    this.setState({ userCreatingErrorMessage: null });\n  };\n\n  handleClearSuccess = () => {\n    this.setState({ successMessage: null });\n  };\n\n  handleClickButton = (evt) => {\n    evt.preventDefault();\n    document.getElementById('addSkillButton').click();\n  };\n\n  render() {\n    const {\n      successMessage, userCreatingErrorMessage, netErrorMessage, loading,\n    } = this.state;\n\n    return (\n      <Formik\n        initialValues={this.initialValues}\n        validationSchema={this.validationSchema}\n        onSubmit={this.onSubmit}\n      >\n        <Form className=\"form\" onChange={this.handleClearSuccess}>\n          <h1>Главная</h1>\n          <div>\n            <label htmlFor=\"name\">\n              Имя\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"name\">\n              <Input\n                id=\"name\"\n                name=\"name\"\n                placeholder=\"Иван\"\n                size=\"large\"\n                suffix={<UserOutlined />}\n              />\n            </Form.Item>\n          </div>\n          <div>\n            <label htmlFor=\"pwd\">\n              Пароль\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"password\">\n              <Input.Password\n                id=\"pwd\"\n                name=\"password\"\n                placeholder=\"bu7UYvjl2nkj9WNshd\"\n                size=\"large\"\n              />\n            </Form.Item>\n          </div>\n          <div>\n            <label htmlFor=\"repwd\">\n              Повторите пароль\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"passwordConfirmation\">\n              <Input.Password\n                id=\"repwd\"\n                name=\"passwordConfirmation\"\n                placeholder=\"bu7UYvjl2nkj9WNshd\"\n                size=\"large\"\n              />\n            </Form.Item>\n          </div>\n          <div>\n            <label htmlFor=\"email\">\n              Электропочта\n              <span className=\"required-star\"> *</span>\n            </label>\n            <span className=\"error\">{userCreatingErrorMessage}</span>\n            <Form.Item name=\"email\">\n              <Input\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"ivan@mail.ru\"\n                size=\"large\"\n                onChange={this.handleClearCloneError}\n                suffix={<MailOutlined />}\n              />\n            </Form.Item>\n          </div>\n          <div>\n            <label htmlFor=\"site\">Ваш сайт </label>\n            <Form.Item name=\"website\">\n              <Input\n                id=\"site\"\n                name=\"website\"\n                placeholder=\"http://www.ivan.ru\"\n                size=\"large\"\n                suffix={<LinkOutlined />}\n              />\n            </Form.Item>\n          </div>\n          <div>\n            <label htmlFor=\"age\">\n              Возраст\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"age\">\n              <InputNumber id=\"age\" name=\"age\" placeholder=\"27\" size=\"large\" />\n            </Form.Item>\n          </div>\n\n          <div>\n            <Table\n              name=\"skills\"\n              rowKey={(row) => `${row.id}`}\n              size=\"small\"\n              pagination={false}\n              columns={[\n                {\n                  title: 'Cуперспособности',\n                  key: 'name',\n                  render: (text, record, i) => (\n                    <Input\n                      name={`skills[${i}]`}\n                      placeholder=\"Телепатия\"\n                      size=\"large\"\n                      suffix={<ThunderboltOutlined />}\n                      onPressEnter={this.handleClickButton}\n                      autoFocus\n                    />\n                  ),\n                },\n              ]}\n            />\n\n            <AddRowButton\n              name=\"skills\"\n              createNewRow={(text) => text || ''}\n              size=\"large\"\n              type=\"primary\"\n              className=\"skillsButton\"\n              id=\"addSkillButton\"\n            >\n              Добавить суперспособность\n            </AddRowButton>\n          </div>\n\n          <div>\n            <Form.Item name=\"acceptTerms\" shouldUpdate={false}>\n              <Checkbox id=\"terms\" name=\"acceptTerms\" />\n              <label htmlFor=\"terms\">\n                {' '}\n                Согласен с условиями\n                <span className=\"required-star\"> *</span>\n              </label>\n            </Form.Item>\n          </div>\n\n          <div className=\"formButtonsContainer\">\n            <SubmitButton loading={loading} disabled={false} size=\"large\" className=\"button\">\n              Зарегистрироваться\n            </SubmitButton>\n            <ResetButton size=\"large\" className=\"button\">\n              Очистить форму\n            </ResetButton>\n          </div>\n          <span className=\"success\">{successMessage}</span>\n          <span className=\"error\">{netErrorMessage}</span>\n        </Form>\n      </Formik>\n    );\n  }\n}\n\nexport default SubmitForm;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Header from '../header/header';\nimport Form3 from '../form/form3';\nimport Form2 from '../form/form2';\nimport Form from '../form/form';\n\nimport './app.scss';\n\nconst App = () => (\n  <BrowserRouter>\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Form} />\n        <Route path=\"/login\" component={Form2} />\n        <Route path=\"/signup\" component={Form3} />\n      </Switch>\n    </div>\n  </BrowserRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'antd/dist/antd.css';\nimport './index.scss';\nimport App from './components/app/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}