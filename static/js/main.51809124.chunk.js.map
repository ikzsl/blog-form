{"version":3,"sources":["logo.png","routes.js","actions/actions.js","reducers/reducers.js","components/header/Header.js","components/signupForm/SignupForm.js","components/loginForm/LoginForm.js","components/mainPage/mainPage.js","components/pageNotFound/pageNotFound.js","components/privateRoute/PrivateRoute.js","components/publicRoute/PublicRoute.js","components/app/App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","changeFetchStatus","createAction","loginUser","logoutUser","userFetch","user","dispatch","url","a","post","response","data","localStorage","setItem","token","userLoginFetch","setFieldError","routes","errors","currentUser","handleActions","actions","state","action","payload","combineReducers","Header","src","logo","width","alt","validationSchema","Yup","shape","username","max","required","password","matches","email","initialValues","Signup","useDispatch","className","onSubmit","values","userPostFetch","htmlFor","Item","name","id","placeholder","size","suffix","UserOutlined","MailOutlined","Password","autoComplete","loading","disabled","icon","UserAddOutlined","to","LoginForm","LoginOutlined","Main","useSelector","LogoutOutlined","onClick","evt","preventDefault","removeItem","type","PrivateRoute","Component","component","rest","render","getItem","PublicRoute","App","useEffect","get","headers","Authorization","status","exact","path","MainPage","SignupForm","PageNotFound","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.51809124.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.968531f8.png\";","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://conduit.productionready.io/api/';\n\nexport default {\n  userPostUrl: () => 'users',\n  userLoginUrl: () => 'users/login',\n  getProfileUrl: () => 'user',\n};\n","import axios from 'axios';\nimport { createAction } from 'redux-actions';\nimport routes from '../routes';\n\nexport const changeFetchStatus = createAction('CHANGE_FETCH_STATUS');\nexport const loginUser = createAction('LOGIN_USER');\nexport const logoutUser = createAction('LOGOUT_USER');\n\nconst userFetch = async (user, dispatch, url) => {\n  const response = await axios.post(url, { user });\n  const { data } = response;\n  localStorage.setItem('token', data.user.token);\n  dispatch(changeFetchStatus(null));\n  dispatch(loginUser(data.user));\n};\n\n// ------------------ userPostFetch ----------------------\nexport const userPostFetch = (user, setFieldError) => async (dispatch) => {\n  try {\n    userFetch(user, dispatch, routes.userPostUrl());\n  } catch ({ response }) {\n    const { errors } = response.data;\n    dispatch(changeFetchStatus(errors));\n    setFieldError('email', errors.email);\n    setFieldError('username', errors.username);\n    setFieldError('password', errors.password);\n  }\n};\n\n// ------------------ userLoginFetch ----------------------\nexport const userLoginFetch = (user, setFieldError) => async (dispatch) => {\n  try {\n    await userFetch(user, dispatch, routes.userLoginUrl());\n  } catch ({ response }) {\n    const { errors } = response.data;\n    dispatch(changeFetchStatus(errors));\n    // setFieldError('email', `email or password ${errors['email or password']}`);\n    setFieldError('password', `email or password ${errors['email or password']}`);\n  }\n};\n\n// --------------------getProfileFetch--------------------\nexport const getProfileFetch = () => async (dispatch) => {\n  const { token } = localStorage;\n  if (!token) {\n    return;\n  }\n  try {\n    const url = routes.getProfileUrl();\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: `Token ${token}`,\n      },\n    });\n    const { data } = response;\n    dispatch(loginUser(data.user));\n  } catch (err) {\n    if (err.response.status === 401) {\n      localStorage.removeItem('token');\n    }\n  }\n};\n","import { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport * as actions from '../actions/actions';\n\nconst currentUser = handleActions(\n  {\n    [actions.logoutUser]: () => {},\n    [actions.loginUser]: (state, action) => action.payload,\n  },\n  {},\n);\n\nconst errors = handleActions(\n  {\n    [actions.changeFetchStatus]: (state, action) => action.payload,\n  },\n  {},\n);\n\nexport default combineReducers({\n  currentUser,\n  errors,\n});\n","import React from 'react';\n// import { NavLink } from 'react-router-dom';\n\nimport './header.scss';\nimport logo from '../../logo.png';\n\nconst Header = () => (\n  <header>\n    <img src={logo} width=\"100\" alt=\"logo\" />\n    {/* <nav>\n      <ul className=\"nav\">\n        <li>\n          <NavLink exact to=\"/\" className=\"link\">\n            /\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/login\" className=\"link\">\n            /login\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/signup\" className=\"link\">\n            /signup\n          </NavLink>\n        </li>\n      </ul>\n    </nav> */}\n  </header>\n);\nexport default Header;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, SubmitButton } from 'formik-antd';\nimport { MailOutlined, UserOutlined, UserAddOutlined } from '@ant-design/icons';\n\nimport { userPostFetch } from '../../actions/actions';\nimport './signupForm.scss';\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .max(50, 'Слишком длинно - не более 50 символов')\n    .required('Имя обязательно'),\n  password: Yup.string()\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d\\w\\W]{6,40}$/,\n      'от 6 до 40 символов, как минимум одна цифра и одна заглавная буква',\n    )\n    .required('Пароль нужен'),\n\n  email: Yup.string().email('Неправильная почта').required('Почту, пожалуйста'),\n});\n\nconst initialValues = {\n  username: '',\n  password: '',\n  email: '',\n};\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = (values, { setFieldError }) => {\n    dispatch(userPostFetch(values, setFieldError));\n  };\n  return (\n    <div className=\"formContainer\">\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n        <Form className=\"form\">\n          <h1>Регистрации</h1>\n          <div className=\"formItem\">\n            <label htmlFor=\"username\">\n              Имя\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"username\">\n              <Input\n                id=\"username\"\n                name=\"username\"\n                placeholder=\"Иван\"\n                size=\"large\"\n                suffix={<UserOutlined />}\n              />\n            </Form.Item>\n          </div>\n          <div className=\"formItem\">\n            <label htmlFor=\"email\">\n              Электропочта\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"email\">\n              <Input\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"ivan@mail.ru\"\n                size=\"large\"\n                suffix={<MailOutlined />}\n              />\n            </Form.Item>\n          </div>\n          <div className=\"formItem\">\n            <label htmlFor=\"pwd\">\n              Пароль\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"password\">\n              <Input.Password\n                id=\"pwd\"\n                name=\"password\"\n                placeholder=\"bu7UYvjl2nkj9WNshd\"\n                size=\"large\"\n                autoComplete=\"off\"\n              />\n            </Form.Item>\n          </div>\n\n          <div className=\"formButtonsContainer\">\n            <SubmitButton\n              loading={false}\n              disabled={false}\n              size=\"large\"\n              shape=\"round\"\n              icon={<UserAddOutlined />}\n              className=\"button\"\n            >\n              Зарегистрироваться\n            </SubmitButton>\n          </div>\n        </Form>\n      </Formik>\n      <div className=\"link-container\">\n        <span>Уже зарегистрировались? </span>\n        <Link to=\"/login\">Войти</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, SubmitButton } from 'formik-antd';\nimport { MailOutlined, LoginOutlined } from '@ant-design/icons';\nimport { userLoginFetch } from '../../actions/actions';\nimport './loginForm.scss';\n\nconst initialValues = {\n  password: '',\n  email: '',\n};\n\nconst validationSchema = Yup.object().shape({\n  password: Yup.string().required('Пароль нужен'),\n  email: Yup.string().email('Неправильная почта').required('Почту, пожалуйста'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = async (values, { setFieldError }) => {\n    dispatch(userLoginFetch(values, setFieldError));\n  };\n\n  return (\n    <div className=\"formContainer\">\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n        <Form>\n          <h1>Вход</h1>\n\n          <div className=\"formItem\">\n            <label htmlFor=\"email\">\n              Электропочта\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"email\">\n              <Input\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"ivan@mail.ru\"\n                size=\"large\"\n                suffix={<MailOutlined />}\n              />\n            </Form.Item>\n          </div>\n\n          <div className=\"formItem\">\n            <label htmlFor=\"pwd\">\n              Пароль\n              <span className=\"required-star\"> *</span>\n            </label>\n            <Form.Item name=\"password\">\n              <Input.Password id=\"pwd\" name=\"password\" size=\"large\" autoComplete=\"off\" />\n            </Form.Item>\n          </div>\n\n          <div className=\"formButtonsContainer\">\n            <SubmitButton\n              loading={false}\n              disabled={false}\n              size=\"large\"\n              shape=\"round\"\n              icon={<LoginOutlined />}\n              className=\"button\"\n            >\n              Войти\n            </SubmitButton>\n          </div>\n        </Form>\n      </Formik>\n      <div className=\"link-container\">\n        <Link to=\"/signup\">Зарегистрироваться</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Button } from 'antd';\nimport { LogoutOutlined } from '@ant-design/icons';\nimport { logoutUser } from '../../actions/actions';\n\nimport './mainPage.scss';\n\nconst Main = () => {\n  const dispatch = useDispatch();\n  const currentUser = useSelector((state) => state.currentUser);\n\n  const handleExit = (evt) => {\n    evt.preventDefault();\n    localStorage.removeItem('token');\n    dispatch(logoutUser());\n  };\n\n  const { username } = currentUser;\n  return (\n    <div className=\"form-container\">\n      <h1>{`Здравствуй ${username}`}</h1>\n      <Button\n        disabled={false}\n        size=\"large\"\n        className=\"button\"\n        icon={<LogoutOutlined />}\n        shape=\"round\"\n        onClick={handleExit}\n        type=\"danger\"\n      >\n        Выйти\n      </Button>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nexport default () => (\n  <>\n    <h1>404</h1>\n    <h2>Страница не найдена</h2>\n  </>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={() => (localStorage.getItem('token') ? <Component /> : <Redirect to=\"/login\" />)}\n  />\n);\n\nPrivateRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PublicRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={() => (localStorage.getItem('token') ? <Redirect to=\"/\" /> : <Component />)}\n  />\n);\n\nPublicRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n};\n\nexport default PublicRoute;\n","import React, { useEffect } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProfileFetch } from '../../actions/actions';\n\nimport Header from '../header/Header';\nimport SignupForm from '../signupForm/SignupForm';\nimport LoginForm from '../loginForm/LoginForm';\nimport MainPage from '../mainPage/mainPage';\nimport PageNotFound from '../pageNotFound/pageNotFound';\n\nimport PrivateRoute from '../privateRoute/PrivateRoute';\nimport PublicRoute from '../publicRoute/PublicRoute';\n\nimport './app.scss';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const currentUser = useSelector((state) => state.currentUser);\n\n  useEffect(() => {\n    dispatch(getProfileFetch());\n  }, [currentUser.id]);\n\n  return (\n    <HashRouter>\n      <Header />\n      <Switch>\n        <PrivateRoute exact path=\"/\" component={MainPage} />\n        <PublicRoute exact path=\"/login\" component={LoginForm} />\n        <PublicRoute exact path=\"/signup\" component={SignupForm} />\n        <Route path=\"*\" component={PageNotFound} />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\n\nimport reducers from './reducers/reducers';\n\nimport 'antd/dist/antd.css';\nimport './index.scss';\nimport App from './components/app/App';\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}